// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// AllMetricGeter is an autogenerated mock type for the AllMetricGeter type
type AllMetricGeter struct {
	mock.Mock
}

// GetAllMetrics provides a mock function with given fields: ctx
func (_m *AllMetricGeter) GetAllMetrics(ctx context.Context) ([][]string, [][]string, error) {
	ret := _m.Called(ctx)

	var r0 [][]string
	var r1 [][]string
	var r2 error
	if rf, ok := ret.Get(0).(func(context.Context) ([][]string, [][]string, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) [][]string); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([][]string)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) [][]string); ok {
		r1 = rf(ctx)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([][]string)
		}
	}

	if rf, ok := ret.Get(2).(func(context.Context) error); ok {
		r2 = rf(ctx)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

type mockConstructorTestingTNewAllMetricGeter interface {
	mock.TestingT
	Cleanup(func())
}

// NewAllMetricGeter creates a new instance of AllMetricGeter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAllMetricGeter(t mockConstructorTestingTNewAllMetricGeter) *AllMetricGeter {
	mock := &AllMetricGeter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
